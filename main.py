from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.button import Button
from kivy.uix.scrollview import ScrollView
from kivy.uix.gridlayout import GridLayout
from kivy.clock import Clock
from kivy.graphics import Color, Rectangle
import requests
import json
from threading import Thread
import time

class MeteoApp(App):
    def build(self):
        self.ip_address = "192.168.1.219"  # IP –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.layout = BoxLayout(orientation='vertical', padding=10, spacing=10)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = Label(text='üå§Ô∏è –ú–µ—Ç–µ–æ—Å—Ç–∞–Ω—Ü–∏—è', size_hint_y=None, height=50, font_size=24, bold=True)
        
        # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ IP
        ip_layout = BoxLayout(orientation='horizontal', size_hint_y=None, height=50)
        ip_layout.add_widget(Label(text='IP –∞–¥—Ä–µ—Å:', size_hint_x=0.3))
        self.ip_input = TextInput(text=self.ip_address, multiline=False, size_hint_x=0.7)
        ip_layout.add_widget(self.ip_input)
        
        # –ö–Ω–æ–ø–∫–∏
        btn_layout = BoxLayout(orientation='horizontal', size_hint_y=None, height=50, spacing=10)
        self.connect_btn = Button(text='–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è', on_press=self.connect_to_station)
        self.refresh_btn = Button(text='–û–±–Ω–æ–≤–∏—Ç—å', on_press=self.refresh_data)
        btn_layout.add_widget(self.connect_btn)
        btn_layout.add_widget(self.refresh_btn)
        
        # –û–±–ª–∞—Å—Ç—å –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
        self.data_layout = GridLayout(cols=2, size_hint_y=None, spacing=10)
        self.data_layout.bind(minimum_height=self.data_layout.setter('height'))
        
        scroll = ScrollView(size_hint=(1, 1))
        scroll.add_widget(self.data_layout)
        
        # –°—Ç–∞—Ç—É—Å
        self.status_label = Label(text='–ì–æ—Ç–æ–≤ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é', size_hint_y=None, height=30)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        self.layout.add_widget(title)
        self.layout.add_widget(ip_layout)
        self.layout.add_widget(btn_layout)
        self.layout.add_widget(scroll)
        self.layout.add_widget(self.status_label)
        
        # –ê–≤—Ç–æ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
        Clock.schedule_once(lambda dt: self.connect_to_station(None), 1)
        
        return self.layout
    
    def connect_to_station(self, instance):
        self.ip_address = self.ip_input.text.strip()
        self.status_label.text = '–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è...'
        Thread(target=self.fetch_data).start()
    
    def refresh_data(self, instance):
        self.status_label.text = '–û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ...'
        Thread(target=self.fetch_data).start()
    
    def fetch_data(self):
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
            response = requests.get(f'http://{self.ip_address}/data', timeout=5)
            data = response.json()
            
            # –ü–æ–ª—É—á–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
            history_response = requests.get(f'http://{self.ip_address}/history', timeout=5)
            history = history_response.json()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º UI –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            Clock.schedule_once(lambda dt: self.update_ui(data, history), 0)
            
        except Exception as e:
            Clock.schedule_once(lambda dt: self.show_error(str(e)), 0)
    
    def update_ui(self, data, history):
        self.data_layout.clear_widgets()
        
        # –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
        self.add_data_row('üå°Ô∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞', f"{data['temperature']} ¬∞C")
        self.add_data_row('üíß –í–ª–∞–∂–Ω–æ—Å—Ç—å', f"{data['humidity']} %")
        self.add_data_row('üìä –î–∞–≤–ª–µ–Ω–∏–µ', f"{data['pressure']} –º–º —Ä—Ç.—Å—Ç.")
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏
        self.add_data_row('', '')  # –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞
        self.add_data_row('üìà –ò—Å—Ç–æ—Ä–∏—è', '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:')
        
        for i, record in enumerate(history[-5:]):  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π
            from datetime import datetime
            timestamp = datetime.fromtimestamp(record['t']).strftime('%H:%M')
            self.add_data_row(f'üïí {timestamp}', f"{record['temp']}¬∞C, {record['hum']}%")
        
        self.status_label.text = '–î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω—ã'
    
    def add_data_row(self, label, value):
        self.data_layout.add_widget(Label(text=label, size_hint_y=None, height=40))
        self.data_layout.add_widget(Label(text=value, size_hint_y=None, height=40))
    
    def show_error(self, error):
        self.data_layout.clear_widgets()
        self.add_data_row('‚ùå –û—à–∏–±–∫–∞', str(error))
        self.status_label.text = '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è'

if __name__ == '__main__':
    MeteoApp().run()